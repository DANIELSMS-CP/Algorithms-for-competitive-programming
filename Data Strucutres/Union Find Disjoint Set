struct UnionFind
{
    vector<int> par,sz;
    UnionFind(int n)
    {
        par.resize(n+1);
        sz.resize(n+1,1);
        for(int i=1;i<=n;i++)
        {
            par[i]=i;
        }
    }
    int find(int x)
    {
        return (par[x]==x?x:par[x]=find(par[x]));
    }
    bool merge(int x,int y)
    {
        int a=find(x);
        int b=find(y);
        if(a==b)
        {
            return 0;
        }
        if(sz[a]<sz[b])
        {
            swap(a,b);
        }
        sz[a]+=sz[b];
        par[b]=a;
        return 1;
    }
    bool connected(int x,int y)
    {
        return find(x)==find(y);
    }
};
