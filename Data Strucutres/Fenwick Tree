#include <bits/stdc++.h>
using namespace std;

#define int long long
const int mod=1e9+7; 
#define lsone(S) ((S)&(-S))

vector<int> fenwick_tree,fenwick_tree2,a;
int n;
void add(vector<int> &f,int idx,int val)
{
    for(;idx<=n;idx+=lsone(idx))
    {
        f[idx]+=val;
    }
}
void range_add(int l,int r,int val)
{
    add(fenwick_tree,l,val);
    add(fenwick_tree,r+1,-val);
    add(fenwick_tree2,l,val*(l-1));
    add(fenwick_tree2,r+1,-val*r);
}
int sum(vector<int> &f,int idx)
{
    int ans=0;
    for(;idx>0;idx-=lsone(idx))
    {
        ans+=f[idx];
    }
    return ans;
}
int prefix_sum(int idx)
{
    return sum(fenwick_tree,idx)*idx-sum(fenwick_tree2,idx);
}
int range_sum(int l,int r)
{
    return prefix_sum(r)-prefix_sum(l-1);
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("problems.in", "r", stdin);
    //freopen("problems.out", "w", stdout);
    cin >> n;
    a.resize(n+2);
    fenwick_tree.resize(n+2,0),fenwick_tree2.resize(n+2,0);
    for(int i=1;i<=n;i++)
    {
        cin >> a[i];
        add(fenwick_tree,i,a[i]);
        add(fenwick_tree2,i,a[i]);
    }
    int upd;
    cin >> upd;
    while(upd--)
    {
        int l,r,v;
        cin >> l >> r >> v;
        range_add(l,r,v);
    }
    int s;
    cin >> s;
    //cout << "s=" << s << '\n';
    while(s--)
    {
        int l,r;
        cin >> l >> r;
        cout << range_sum(l,r) << '\n';
    }

    return 0;
}
